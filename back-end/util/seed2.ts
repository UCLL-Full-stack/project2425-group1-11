import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

// seed the database with pins and boards generated by chatgpt
async function main() {
    console.log('Seeding database with pins (exception testing)...');

    const existingBoardIds = [1, 2, 3];

    const pins = await Promise.all([
        prisma.pin.create({
            data: {
                title: 'A Very Long and Descriptive Title That Definitely Exceeds the Limit of Twenty-Five Characters',
                imageUrl: 'https://placehold.co/800x600',
                description:
                    'This description is intentionally very long to test how the UI handles lengthy text content. It should be truncated properly without breaking the layout and still look visually appealing.',
                boards: { connect: { id: existingBoardIds[0] } },
                categories: { connect: [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }] },
            },
        }),
        prisma.pin.create({
            data: {
                title: 'Short Title',
                imageUrl: 'https://placehold.co/300x500',
                description: 'Short description for a pin.',
                boards: { connect: { id: existingBoardIds[1] } },
                categories: { connect: [{ id: 5 }, { id: 6 }] },
            },
        }),
        prisma.pin.create({
            data: {
                title: 'Another Long Title That Needs to Be Truncated Properly',
                imageUrl: 'https://placehold.co/1200x400',
                description:
                    'This description is also quite lengthy to test UI behavior with more text.',
                boards: {
                    connect: [{ id: existingBoardIds[0] }, { id: existingBoardIds[2] }],
                },
                categories: { connect: [{ id: 7 }, { id: 8 }, { id: 9 }] },
            },
        }),
        prisma.pin.create({
            data: {
                title: 'Standard Pin',
                imageUrl: 'https://placehold.co/600x400',
                description: 'A pin with a normal image size and two categories.',
                boards: { connect: { id: existingBoardIds[2] } },
                categories: { connect: [{ id: 1 }, { id: 3 }] },
            },
        }),
        prisma.pin.create({
            data: {
                title: 'Shared Pin with Many Categories',
                imageUrl: 'https://placehold.co/500x500',
                description:
                    'A shared pin across multiple boards, testing category limits and UI display.',
                boards: {
                    connect: [
                        { id: existingBoardIds[0] },
                        { id: existingBoardIds[1] },
                        { id: existingBoardIds[2] },
                    ],
                },
                categories: { connect: [{ id: 2 }, { id: 4 }, { id: 5 }, { id: 6 }, { id: 9 }] },
            },
        }),
    ]);

    console.log(`${pins.length} pins created and linked to existing boards.`);

    console.log('Seeding with exceptions completed.');
}

main()
    .catch((e) => {
        console.error(e);
        process.exit(1);
    })
    .finally(async () => {
        await prisma.$disconnect();
    });
